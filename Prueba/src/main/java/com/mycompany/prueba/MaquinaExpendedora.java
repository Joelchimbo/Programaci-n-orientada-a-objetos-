package com.mycompany.prueba;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.mongodb.client.MongoCollection;
import javax.swing.JFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import org.bson.Document;
/**
 *
 * @author chimn
 */
public class MaquinaExpendedora extends javax.swing.JFrame {
    double total = 0.0;
    private javax.swing.JTextField jTextFieldTotal;
    private MongoCollection<Document> productosCollection;
    private String nombreProductoSeleccionado;
    
    public MaquinaExpendedora() {
        
        initComponents();   
        jTextFieldTotal = new javax.swing.JTextField(); // Inicializar jTextFieldTotal
        
        
        // Inicializar la conexión a la base de datos MongoDB
        ConexionMongoDB conexionMongoDB = new ConexionMongoDB();
        productosCollection = conexionMongoDB.getProductosCollection();

    // ActionListener para el botón de cada producto
// ActionListener para el botón de cada producto
        cocacola.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                nombreProductoSeleccionado = "cocacola"; // Al hacer clic en el botón de coca cola, asigna el nombre del producto
                actualizarPrecio(nombreProductoSeleccionado);
            }
        });

        pepsi.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                nombreProductoSeleccionado = "pepsi"; // Al hacer clic en el botón de pepsi, asigna el nombre del producto
                actualizarPrecio(nombreProductoSeleccionado);
            }
        });

        chips.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                nombreProductoSeleccionado = "chips"; // Al hacer clic en el botón de chips, asigna el nombre del producto
                actualizarPrecio(nombreProductoSeleccionado);
            }
        });

        agua.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                nombreProductoSeleccionado = "agua"; // Al hacer clic en el botón de agua, asigna el nombre del producto
                actualizarPrecio(nombreProductoSeleccionado);
            }
        });

}
    private double calcularCambio(double montoIngresado, double totalCompra) {
    return montoIngresado - totalCompra;
}

    private void actualizarPrecio(String nombreProducto) {
            System.out.println("Actualizando precio para: " + nombreProducto);
    Document productoDoc = productosCollection.find(new Document("nombre", nombreProducto)).first();
    if (productoDoc != null) {
        double precio = productoDoc.getDouble("precio");
        String precioTotal = String.format("Precio total: $%.2f", precio); // Formatear el precio con el símbolo de dólar y dos decimales
        jTextField1.setText(precioTotal);
        total += precio;
        jTextFieldTotal.setText(String.valueOf(total));
        System.out.println("Documento encontrado en la base de datos: " + productoDoc);
    } else {
        System.out.println("Producto no encontrado en la base de datos.");
        JOptionPane.showMessageDialog(null, "Lo siento, el producto seleccionado no está disponible actualmente.");
        // Puedes desactivar el botón asociado al producto o realizar otras acciones apropiadas aquí
    }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cocacola = new javax.swing.JButton();
        pepsi = new javax.swing.JButton();
        chips = new javax.swing.JButton();
        agua = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dineroingresado = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cocacola.setBackground(new java.awt.Color(204, 204, 204));
        cocacola.setIcon(new javax.swing.ImageIcon("C:\\Users\\chimn\\OneDrive\\Documentos\\NetBeansProjects\\Prueba\\src\\main\\resources\\imgs\\cola.png")); // NOI18N
        cocacola.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cocacola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cocacolaActionPerformed(evt);
            }
        });
        jPanel1.add(cocacola, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 130, 90));

        pepsi.setBackground(new java.awt.Color(204, 204, 204));
        pepsi.setIcon(new javax.swing.ImageIcon("C:\\Users\\chimn\\OneDrive\\Documentos\\NetBeansProjects\\Prueba\\src\\main\\resources\\imgs\\pepsi.png")); // NOI18N
        pepsi.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pepsiActionPerformed(evt);
            }
        });
        jPanel1.add(pepsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 140, 90));

        chips.setBackground(new java.awt.Color(204, 204, 204));
        chips.setIcon(new javax.swing.ImageIcon("C:\\Users\\chimn\\OneDrive\\Documentos\\NetBeansProjects\\Prueba\\src\\main\\resources\\imgs\\chips.png")); // NOI18N
        chips.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chipsActionPerformed(evt);
            }
        });
        jPanel1.add(chips, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 120, 100));

        agua.setBackground(new java.awt.Color(204, 204, 204));
        agua.setIcon(new javax.swing.ImageIcon("C:\\Users\\chimn\\OneDrive\\Documentos\\NetBeansProjects\\Prueba\\src\\main\\resources\\imgs\\water.png")); // NOI18N
        agua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aguaActionPerformed(evt);
            }
        });
        jPanel1.add(agua, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 130, 100));

        jLabel1.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 14)); // NOI18N
        jLabel1.setText("01");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, -1));

        jLabel2.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 14)); // NOI18N
        jLabel2.setText("02");
        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        jLabel3.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 14)); // NOI18N
        jLabel3.setText("03");
        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, -1, -1));

        jLabel4.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 14)); // NOI18N
        jLabel4.setText("04");
        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 190, 30));

        jLabel5.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 14)); // NOI18N
        jLabel5.setText("MAQUINA EXPENDEDORA");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, -1, -1));

        jLabel6.setText("$ 0.70");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, -1, -1));

        jLabel7.setText("$ 0.50");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, -1, -1));

        jLabel8.setText("$ 0.30");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, -1, -1));

        jLabel9.setText("$ 0.90");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, -1, -1));

        jButton1.setText("BORRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 150, -1, -1));

        dineroingresado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dineroingresadoActionPerformed(evt);
            }
        });
        jPanel1.add(dineroingresado, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 90, -1));

        jLabel10.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 12)); // NOI18N
        jLabel10.setText("INGRESE EL DNERO...");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, -1, -1));

        jButton2.setText("COMPRAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 370, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cocacolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cocacolaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cocacolaActionPerformed

    private void aguaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aguaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aguaActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jTextField1.setText("");
                total = 0.0;
                jTextFieldTotal.setText("0.0");
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pepsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pepsiActionPerformed

    private void chipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chipsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chipsActionPerformed

    private void dineroingresadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dineroingresadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dineroingresadoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            // Verificar si se ha ingresado dinero
    if (dineroingresado.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese el dinero primero.");
        return; // Salir del método si no se ha ingresado dinero
    }
    
    // Convertir el monto ingresado a double
    double montoIngresado = Double.parseDouble(dineroingresado.getText());
    
    // Verificar si se ha seleccionado un producto y si hay suficiente dinero ingresado
    if (nombreProductoSeleccionado != null && !nombreProductoSeleccionado.isEmpty() && montoIngresado >= total) {
        // Verificar si hay stock disponible del producto seleccionado
        if (verificarStockDisponible(nombreProductoSeleccionado)) {
            // Calcular el cambio
            double cambio = calcularCambio(montoIngresado, total);
            
            // Mostrar el cambio al usuario
            JOptionPane.showMessageDialog(null, "Cambio: $" + cambio);
            
            // Reducir el stock del producto seleccionado en la base de datos
            reducirStockProductoSeleccionado(nombreProductoSeleccionado);
            
            // Mostrar mensaje de compra realizada
            JOptionPane.showMessageDialog(null, "Compra realizada: " + nombreProductoSeleccionado);
            
            // Restablecer el total y los campos relacionados
            total = 0.0;
            jTextFieldTotal.setText("0.0");
            jTextField1.setText("");
            dineroingresado.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Lo siento, el producto seleccionado está agotado.");
            return; // Salir del método si el producto está agotado
        }
    } else {
        JOptionPane.showMessageDialog(null, "Por favor seleccione un producto primero o ingrese un monto suficiente.");
        return; // Salir del método si no se ha seleccionado un producto o el monto ingresado es insuficiente
    }
    }//GEN-LAST:event_jButton2ActionPerformed
private boolean verificarStockDisponible(String nombreProducto) {
    try {
        // Buscar el documento del producto en la base de datos
        Document productoDoc = productosCollection.find(new Document("nombre", nombreProducto)).first();
        
        // Verificar si se encontró el producto en la base de datos y si su stock es mayor que cero
        if (productoDoc != null && productoDoc.getInteger("stock") > 0) {
            return true; // Hay stock disponible del producto
        } else {
            return false; // El producto está agotado
        }
    } catch (Exception e) {
        System.out.println("Error al verificar el stock del producto: " + e.getMessage());
        return false; // Se produjo un error al verificar el stock
    }
}
    private void reducirStockProductoSeleccionado(String nombreProducto) {
    try {
        // Buscar el documento del producto en la base de datos
        Document productoDoc = productosCollection.find(new Document("nombre", nombreProducto)).first();
        
        // Verificar si se encontró el producto en la base de datos
        if (productoDoc != null) {
            // Obtener el stock actual del producto
            int stockActual = productoDoc.getInteger("stock");
            
            // Reducir el stock en 1 (o en la cantidad que desees)
            int nuevoStock = stockActual - 1; // Por ejemplo, reducimos el stock en 1 unidad
            
            // Actualizar el documento con el nuevo stock
            productosCollection.updateOne(new Document("nombre", nombreProducto), new Document("$set", new Document("stock", nuevoStock)));
            
            System.out.println("Stock actualizado para " + nombreProducto + ": " + nuevoStock);
        } else {
            System.out.println("Producto no encontrado en la base de datos.");
        }
    } catch (Exception e) {
        System.out.println("Error al reducir el stock del producto: " + e.getMessage());
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MaquinaExpendedora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MaquinaExpendedora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MaquinaExpendedora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MaquinaExpendedora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MaquinaExpendedora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agua;
    private javax.swing.JButton chips;
    private javax.swing.JButton cocacola;
    private javax.swing.JTextField dineroingresado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton pepsi;
    // End of variables declaration//GEN-END:variables

    private static class jTextFieldTotal {

        private static void setText(String valueOf) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public jTextFieldTotal() {
        }
    }
}
